version: '3'
services:
    flask:
        build:
            context: src
            dockerfile: Dockerfile
        image: flask
        ports:
            - "5000:5000"
        container_name: enrollment_app
        restart: unless-stopped
        environment: 
            APP_ENV: "prod"
            APP_DEBUG: "False"
            APP_PORT: 5000
            MONGODB_DATABASE: UTA_Enrollment
            MONGODB_HOSTNAME: mongodb
            SECRET_KEY: 'my-flask-app-uta'
        volumes: 
            - appdata:/var/www
        depends_on:
            - mongodb
        networks:
            - frontend
            - backend
    
    mongodb:
        image: mongo:latest
        container_name: mongodb
        restart: unless-stopped
        environment:
            MONGO_INITDB_DATABASE: UTA_Enrollment
            MONGODB_DATA_DIR: /data/db
            MONGODB_LOG_DIR: /data/null
        volumes: 
            - mongodbdata:/data/db
        networks:
            - backend
    
    webserver:
        build:
            context: nginx
            dockerfile: Dockerfile
        image: nginx_webserver
        container_name: webserver
        restart: unless-stopped
        environment:
            APP_ENV: "prod"
            APP_NAME: "webserver"
            APP_DEBUG: "false"
            SERVICE_NAME: "webserver"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - nginxdata:/var/log/nginx
        depends_on:
            - flask
        networks:
            - frontend
    
networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local
    nginxdata:
        driver: local